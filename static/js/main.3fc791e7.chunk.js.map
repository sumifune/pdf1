{"version":3,"sources":["http-common.js","services/patient.service.js","components/add-patient.component.js","components/patient.component.js","services/appointment.service.js","components/patients-list.component.js","components/appointment-case.component.js","components/appointments-list.component.js","components/add-appointment.component.js","components/search.component.js","components/appointments-list-by-patient.component.js","download.js","services/invoice.service.js","components/invoices-list.component.js","services/service.service.js","components/add-invoice.component.js","components/search-modal-invoices.component.js","components/invoices-list-by-patient.component.js","pdf/components/Header.js","pdf/components/InvoiceID.js","pdf/components/PersonalData.js","pdf/components/InvoiceDetails.js","pdf/components/Footer.js","components/invoice-pdf.component.js","components/observations-list-by-patient.component.js","components/add-observation.component.js","components/services-list.component.js","components/add-service.component.js","components/service.component.js","App.js","serviceWorker.js","fontawesome.js","index.js"],"names":["axios","create","baseURL","process","headers","params","http","get","id","data","post","put","delete","surname","observation","AddPatient","props","clear","e","preventDefault","sigPad","setState","trimmedDataURL","trim","getTrimmedCanvas","toDataURL","onChangeName","bind","onChangeSurname","onChangeAddress","onChangeCity","onChangeDni","onChangePhone","onChangeEmail","onChangeDescription","savePatient","newPatient","state","name","address","city","dni","phone","email","description","active","submitted","this","target","value","signature","PatientDataService","then","response","catch","console","log","className","style","marginTop","autoComplete","onClick","htmlFor","type","required","onChange","canvasProps","ref","src","alt","marginBottom","Component","Patient","getPatient","updateActive","updatePatient","deletePatient","currentPatient","message","match","prevState","status","update","history","push","date","PatientsList","handleKeyPress","event","key","retrievePatients","onChangeSearchSurname","handlePageChange","handlePageSizeChange","toggleMenu","addAppointment","makeAppointment","patients","searchSurname","page","count","pageSize","pageSizes","getRequestParams","getAll","totalPages","patient","getAttribute","expanded","res","split","hour_date_selectedDate","madeBy","hour","service","estate","AppointmentDataService","placeholder","onKeyPress","map","index","paddingLeft","data-toggle","data-target","aria-expanded","aria-controls","inx","Dropdown","as","ButtonGroup","Button","variant","patientid","serviceid","minDeviceWidth","matches","Toggle","Menu","Item","href","Divider","aria-labelledby","data-parent","to","size","Pagination","siblingCount","boundaryCount","shape","Image","rounded","AppointmentCase","useState","show","setShow","handleClose","isMobile","useMediaQuery","query","appointment","backgroundColor","height","display","justifyContent","alignItems","borderRadius","calcStyle","substring","Modal","onHide","Header","closeButton","Title","Body","moment","createdAt","fromNow","Footer","aid","arrindx","indexdate","cancelAppointment","fulfillAppointment","locale","AddAppointment","deleteAppointment","i","appointments","filter","item","j","redirectPatients","day","selectedDate","add","format","handleDateChange","retrieveAppointments","previousDates","followingDates","apointee","selected","prevProps","findByDateNext","nextFiveDates","concat","arrIndx","timeSlotConainer","border","minHeight","hourHeader","timeSlot","width","aaaa","libInstance","utils","MomentUtils","margin","label","cancelLabel","okLabel","KeyboardButtonProps","paddingTop","Array","from","length","appointmentDates","indexDate","stopPropagation","setService","findByDate","appointmentAcu","appointmentPsico","minDate","InputGroup","DropdownButton","Prepend","title","FormControl","aria-describedby","readOnly","toString","marginLeft","Toast","onClose","SearchModal","date1","setDate1","date2","setDate2","setFilter","doFilter","handleShow","Container","Row","Col","xs","md","handleState","handleCloseModal","handleShowModal","findByPatientId","Card","Subtitle","Text","Link","responseType","dd","InvoicesList","retrieveInvoices","cancelInvoice","sayHi","generateExcel","descExcel","invoices","startOf","total","numberInvoices","numCanInvoices","downloadExcel","InvoiceDataService","url","window","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","totalInvoices","invoice","inumber","charAt","toUpperCase","slice","background","paddingRight","maxWidth","sessions","concept","base","iva","pathname","xxx","myCustomProps","emittedTo","_id","AddVoice","onChangeConcept","onChangeSessions","saveInvoice","newInvoice","services","retrieveServices","ServiceDataService","options","selectedIndex","counter","Form","Group","controlId","Label","Control","defaultValue","InvoicesListByPatient","payInvoice","styles","StyleSheet","container","flexDirection","containerFactura","borderBottomWidth","borderBottomColor","borderBottomStyle","detailColumn","flexGrow","textTransform","linkColumn","alignSelf","justifySelf","fontSize","subtitle","image","numberColumn","dateColumn","textAlign","basicFont","InvoiceID","number","personalData","paddingBottom","containerRow","attribute","PersonalData","invoiceData","containerHeaders","bolding","fontWeight","textDecoration","detailValue","containerDetails","InvoiceDetails","footerText","footer","location","Date","getDate","month","getMonth","year","getFullYear","invoiceNumber","invoiceDate","padding","Math","random","author","keywords","subject","ObservationsList","retrieveObservations","deleteObservation","sortObs","sortObsInv","observations","findObservations","sortedArray","sort","a","b","observationID","newArray","o","DropdownType","idx","eventKey","note","onChangeNote","addObservation","success","rows","ServicesList","cost","AddService","onChangeIVA","createService","newService","onChangeCost","updateService","getService","App","Navbar","bg","fixed","Brand","Collapse","Nav","NavDropdown","alignRight","exact","path","component","AppointmentsList","AppointmentsListByPatient","AddObservation","AddInvoice","InvoicePDF","Service","Boolean","hostname","library","faCoffee","faCalendarTimes","faFileExcel","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3fc791e7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = process.env.NODE_ENV !== 'production' ?\r\n\t\t\t\t\t\t\t  process.env.REACT_APP_BASE_URL_DEVELOPMENT :\r\n\t\t\t\t\t\t\t\tprocess.env.REACT_APP_BASE_URL_PRODUCTION;\r\n\r\nexport default axios.create({\r\n  baseURL: baseURL,\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});","import http from \"../http-common\";\r\n\r\nclass PatientDataService {\r\n  getAll(params) {\r\n    return http.get(\"/patients\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/patients/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/patients\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/patients/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/patients/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/patients`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/patients?surname=${surname}`);\r\n  }\r\n\r\n  findObservations(id) {\r\n    return http.get(`/patients/${id}/obs`);\r\n  }\r\n\r\n  deleteObservation(id, observation) {\r\n    return http.delete(`/patients/${id}/obs?observation=${observation}`);\r\n  }\r\n\r\n  addObservation(id, data) {\r\n    return http.put(`/patients/${id}/addob`, data);\r\n  }\r\n}\r\n\r\nexport default new PatientDataService();\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\n\r\nimport SignaturePad from 'react-signature-canvas';\r\nimport './add-patient.component.css';\r\n\r\nexport default class AddPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeSurname = this.onChangeSurname.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n    this.onChangeDni = this.onChangeDni.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.savePatient = this.savePatient.bind(this);\r\n    this.newPatient = this.newPatient.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      surname: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      dni: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      description: \"\",\r\n      active: false,\r\n\r\n      submitted: false,\r\n      trimmedDataURL: null,\r\n    };\r\n    this.sigPad = {};\r\n  }\r\n  clear = (e) => {\r\n    e.preventDefault();\r\n    this.sigPad.clear();\r\n    this.setState({trimmedDataURL: null});\r\n  }\r\n  trim = (e) => {\r\n    e.preventDefault();\r\n    this.setState({trimmedDataURL: this.sigPad.getTrimmedCanvas()\r\n      .toDataURL('image/png')});\r\n  }\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n  onChangeSurname(e) {\r\n    this.setState({\r\n      surname: e.target.value,\r\n    });\r\n  }\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value,\r\n    });\r\n  }\r\n  onChangeCity(e) {\r\n    this.setState({\r\n      city: e.target.value,\r\n    });\r\n  }\r\n  onChangeDni(e) {\r\n    this.setState({\r\n      dni: e.target.value,\r\n    });\r\n  }\r\n  onChangePhone(e) {\r\n    this.setState({\r\n      phone: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  savePatient() {\r\n\r\n    // console.log(this.state.trimmedDataURL);\r\n    if (!!!this.state.trimmedDataURL) {\r\n      console.log('trimmedDataURL not set');\r\n      return;\r\n    }\r\n\r\n    var data = {\r\n      name: this.state.name,\r\n      surname: this.state.surname,\r\n      address: this.state.address,\r\n      city: this.state.city,\r\n      dni: this.state.dni,\r\n      phone: this.state.phone,\r\n      email: this.state.email,\r\n      description: this.state.description,\r\n      signature: this.state.trimmedDataURL\r\n    };\r\n\r\n    PatientDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          surname: response.data.surname,\r\n          address: response.data.address,\r\n          city: response.data.city,\r\n          dni: response.data.dni,\r\n          phone: response.data.phone,\r\n          email: response.data.email,\r\n          description: response.data.description,\r\n          active: response.data.active,\r\n          signature: response.data.signature,\r\n\r\n          submitted: true,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newPatient() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      surname: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      dni: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      description: \"\",\r\n      active: false,\r\n      trimmedDataURL: null,\r\n\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n      <div className=\"col-12\" style={{ marginTop: '10px'}}>\r\n      <form autoComplete=\"off\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Añadido correctamente!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPatient}>\r\n              Nuevo\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"surname\">Apellidos</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"surname\"\r\n                required\r\n                value={this.state.surname}\r\n                onChange={this.onChangeSurname}\r\n                name=\"surname\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n                autoComplete=\"nope\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"city\">Ciudad</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"city\"\r\n                required\r\n                value={this.state.city}\r\n                onChange={this.onChangeCity}\r\n                name=\"city\"\r\n                autoComplete=\"nope\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dni\">DNI</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"dni\"\r\n                required\r\n                value={this.state.dni}\r\n                onChange={this.onChangeDni}\r\n                name=\"dni\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phone\">Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"phone\"\r\n                required\r\n                value={this.state.phone}\r\n                onChange={this.onChangePhone}\r\n                name=\"phone\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                required\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                name=\"email\"\r\n                autoComplete=\"nope\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Descripción</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"sigContainer\">\r\n              <SignaturePad\r\n                canvasProps={{className: 'sigPad'}}\r\n                ref={(ref) => { this.sigPad = ref }}\r\n              />\r\n            </div>\r\n            <div className='row buttons-margin'>\r\n              <div className=\"col\">\r\n                <button className=\"buttons\" onClick={this.clear}>\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <div className=\"col\">\r\n                <button className=\"buttons\" onClick={this.trim}>\r\n                  Capturar\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className=\"col text-center\">\r\n                {this.state.trimmedDataURL\r\n                  ? <img className=\"sigImage\"\r\n                    src={this.state.trimmedDataURL} alt='manolito'/>\r\n                  : null}\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div className=\"col text-center\">\r\n                <button style={{marginBottom: \"25px\", marginTop: \"20px\"}} onClick={this.savePatient} className=\"btn btn-secondary\">\r\n                  Añadir\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        )}\r\n      </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport './patient.component.css';\r\n\r\nexport default class Patient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeSurname = this.onChangeSurname.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n    this.onChangeDni = this.onChangeDni.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n\r\n    this.getPatient = this.getPatient.bind(this);\r\n    this.updateActive = this.updateActive.bind(this);\r\n    this.updatePatient = this.updatePatient.bind(this);\r\n    this.deletePatient = this.deletePatient.bind(this);\r\n\r\n    this.state = {\r\n      currentPatient: {\r\n        id: null,\r\n        name: \"\",\r\n        surname: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        dni: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        description: \"\",\r\n        active: false,\r\n        signature: null,\r\n        submitted: false,\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPatient(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          name: name,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeSurname(e) {\r\n    const surname = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          surname: surname,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    const address = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          address: address,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeCity(e) {\r\n    const city = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          city: city,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDni(e) {\r\n    const dni = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          dni: dni,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePhone(e) {\r\n    const phone = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          phone: phone,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const email = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          email: email,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentPatient: {\r\n        ...prevState.currentPatient,\r\n        description: description,\r\n      },\r\n    }));\r\n  }\r\n\r\n  getPatient(id) {\r\n    PatientDataService.get(id)\r\n      .then((response) => {\r\n        // console.log(response.data.signature);\r\n        this.setState({\r\n          currentPatient: response.data,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateActive(status) {\r\n    var data = {\r\n      id: this.state.currentPatient.id,\r\n      name: this.state.currentPatient.name,\r\n      surname: this.state.currentPatient.surname,\r\n      address: this.state.currentPatient.address,\r\n      city: this.state.currentPatient.city,\r\n      dni: this.state.currentPatient.dni,\r\n      phone: this.state.currentPatient.phone,\r\n      email: this.state.currentPatient.email,\r\n      description: this.state.currentPatient.description,\r\n      active: status,\r\n    };\r\n\r\n    PatientDataService.update(this.state.currentPatient.id, data)\r\n      .then((response) => {\r\n        this.setState((prevState) => ({\r\n          currentPatient: {\r\n            ...prevState.currentPatient,\r\n            active: status,\r\n          },\r\n        }));\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePatient() {\r\n    PatientDataService.update(\r\n      this.state.currentPatient.id,\r\n      this.state.currentPatient\r\n    )\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        this.setState({\r\n          message: \"Paciente actualizado correctamente!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deletePatient() {\r\n    PatientDataService.delete(this.state.currentPatient.id)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        this.props.history.push(\"/patients\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentPatient } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentPatient ? (\r\n          <div className=\"edit-form\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  value={currentPatient.name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"surname\">Apellidos</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"surname\"\r\n                  value={currentPatient.surname}\r\n                  onChange={this.onChangeSurname}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"address\">Dirección</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"address\"\r\n                  value={currentPatient.address}\r\n                  onChange={this.onChangeAddress}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"city\">Ciudad</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"city\"\r\n                  value={currentPatient.city}\r\n                  onChange={this.onChangeCity}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"dni\">DNI</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"dni\"\r\n                  value={currentPatient.dni}\r\n                  onChange={this.onChangeDni}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\">Teléfono</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"phone\"\r\n                  value={currentPatient.phone}\r\n                  onChange={this.onChangePhone}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  value={currentPatient.email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Descripción</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentPatient.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Estado:</strong>\r\n                </label>\r\n                {currentPatient.active ? \"Active\" : \"Inactive\"}\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"action-buttons\">\r\n              {currentPatient.active ? (\r\n                <button\r\n                  className=\"badge badge-primary mr-2\"\r\n                  onClick={() => this.updateActive(false)}\r\n                >\r\n                  Desactivar\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"badge badge-primary mr-2\"\r\n                  onClick={() => this.updateActive(true)}\r\n                >\r\n                  Activar\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                className=\"badge badge-danger mr-2\"\r\n                onClick={this.deletePatient}\r\n              >\r\n                Eliminar\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"badge badge-success\"\r\n                onClick={this.updatePatient}\r\n              >\r\n                Actualizar\r\n              </button>\r\n              <p>{this.state.message}</p>\r\n            </div>\r\n            <div className='row'>\r\n              <div className=\"col text-center\">\r\n                {this.state.currentPatient.signature\r\n                  ? <img className=\"sigImage\"\r\n                    src={this.state.currentPatient.signature} alt='manolito'/>\r\n                  : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Patient...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass AppointmentDataService {\r\n  getAll(params) {\r\n    return http.get(\"/appointments\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/appointments/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/appointments\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/appointments/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/appointments/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/appointments`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/appointments?surname=${surname}`);\r\n  }\r\n\r\n  findByPatientId(id) {\r\n    return http.get(`/appointments/patient/${id}`);\r\n  }\r\n\r\n  findByDate(date) {\r\n    return http.get(`/appointments/scheduled?date=${date}`);\r\n  }\r\n\r\n  findByDateNext(date) {\r\n    return http.get(`/appointments/scheduled/next?date=${date}`);\r\n  }\r\n}\r\n\r\nexport default new AppointmentDataService();\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport './patients-list.component.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport MediaQuery from 'react-responsive';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nexport default class PatientsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchSurname = this.onChangeSearchSurname.bind(this);\r\n    this.retrievePatients = this.retrievePatients.bind(this);\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.makeAppointment = this.makeAppointment.bind(this);\r\n\r\n    this.state = {\r\n      patients: [],\r\n      searchSurname: \"\",\r\n\r\n      page: 1,\r\n      count: 0,\r\n      pageSize: 9,\r\n    };\r\n\r\n    this.pageSizes = [3, 6, 9];\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props.match.params.id);\r\n    this.retrievePatients();\r\n  }\r\n\r\n  onChangeSearchSurname(e) {\r\n    const searchSurname = e.target.value;\r\n\r\n    this.setState({\r\n      searchSurname: searchSurname,\r\n    });\r\n  }\r\n\r\n  getRequestParams(searchSurname, page, pageSize) {\r\n    let params = {};\r\n\r\n    if (searchSurname) {\r\n      params[\"surname\"] = searchSurname;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrievePatients() {\r\n    const { searchSurname, page, pageSize } = this.state;\r\n    const params = this.getRequestParams(searchSurname, page, pageSize);\r\n\r\n    PatientDataService.getAll(params)\r\n      .then((response) => {\r\n        const { patients, totalPages } = response.data;\r\n\r\n        this.setState({\r\n          patients: patients,\r\n          count: totalPages,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event, value) {\r\n    this.setState(\r\n      {\r\n        page: value,\r\n      },\r\n      () => {\r\n        this.retrievePatients();\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.setState(\r\n      {\r\n        pageSize: event.target.value,\r\n        page: 1\r\n      },\r\n      () => {\r\n        this.retrievePatients();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      // console.log('enter press here! ');\r\n      this.retrievePatients();\r\n    }\r\n  }\r\n\r\n  toggleMenu(event){\r\n    // console.log(event.target.getAttribute('inx'));\r\n    // 1. Make a shallow copy of the items\r\n    let patients = [...this.state.patients];\r\n    // 2. Make a shallow copy of the item you want to mutate\r\n    let patient = {...patients[event.target.getAttribute('inx')]};\r\n    // console.log(patient);\r\n    // 3. Replace the property you're intested in\r\n    patient.expanded = !!!patient.expanded;\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    patients[event.target.getAttribute('inx')] = patient;\r\n    // 5. Set the state to our new copy\r\n    this.setState({patients});\r\n  }\r\n\r\n  makeAppointment(e){\r\n    console.log(this.props.match.params.id);\r\n\r\n    console.log(this.props.history.push('/appointments/'));\r\n    console.log('--------------------------------------------------');\r\n    var res = this.props.match.params.id.split(\"_\");\r\n    console.log(res);\r\n    console.log('kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk');\r\n    console.log(e.target.getAttribute('patientid'));\r\n  }\r\n\r\n  addAppointment(e) {\r\n\r\n    let hour_date_selectedDate = this.props.match.params.id.split(\"_\");\r\n\r\n    var data = {\r\n      madeBy: e.target.getAttribute('patientid'),\r\n      hour: hour_date_selectedDate[0],\r\n      date: hour_date_selectedDate[1],\r\n      service: e.target.getAttribute('serviceid'),\r\n      estate: \"pending\",\r\n    };\r\n\r\n    AppointmentDataService.create(data)\r\n      .then((response) => {\r\n\r\n        this.props.history.push('/appointments/after/' + hour_date_selectedDate[2])\r\n        // console.log(response.data);\r\n        // this.setState(state => {\r\n        //   const appointments = state.appointments.concat(response.data);\r\n\r\n        //   return {\r\n        //     appointments,\r\n        //   };\r\n\r\n        // });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // const isMobile = useMediaQuery({\r\n    //   query: '(max-width: 760px)'\r\n    // });\r\n\r\n    const {\r\n      searchSurname,\r\n      patients,\r\n      page,\r\n      count,\r\n      pageSize,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 style={{ boxSizing: 'border-box' }}\">\r\n          <div className=\"input-group mb-3\" style={{ marginTop: '10px' }}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Buscar por apellido\"\r\n              value={searchSurname}\r\n              onChange={this.onChangeSearchSurname}\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.retrievePatients}\r\n              >\r\n                Buscar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n\r\n          <div id=\"accordion\">\r\n\r\n            { patients && patients.map((patient, index) => (\r\n\r\n\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"card-header\"\r\n                     id={`heading${index}`}>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-8 col-md-9\" style={{ paddingLeft: '0px'}}>\r\n                      <h5 className=\"mb-0\">\r\n                        <button className={\"btn btn-link\" + (patient.expanded ? \"\" : \" collapsed\")}\r\n                                data-toggle=\"collapse\"\r\n                                data-target={`#collapse${index}`}\r\n                                aria-expanded={(patient.expanded ? \"true\" : \"false\")}\r\n                                aria-controls={`collapse${index}`}\r\n                                inx={index}\r\n                                onClick={ this.toggleMenu }\r\n                                >\r\n                          {patient.surname},&nbsp; {patient.name}\r\n                        </button>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"col-4 col-md-3\">\r\n\r\n                      { this.props.match.params.id ?\r\n                        <Dropdown as={ButtonGroup}>\r\n                          <Button variant=\"secondary\" patientid={patient.id} serviceid=\"Acupuntura\" onClick={this.addAppointment}>\r\n                            <MediaQuery minDeviceWidth={760}>\r\n                              {(matches) =>\r\n                                matches\r\n                                  ? 'Acupuntura'\r\n                                  : 'Acu'\r\n                              }\r\n                            </MediaQuery>\r\n                          </Button>\r\n                          <Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item patientid={patient.id} serviceid=\"Psicología\" onClick={this.addAppointment}>Psicología</Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        :\r\n                        <Dropdown as={ButtonGroup}>\r\n                          <Button variant=\"secondary\" href={\"/addappointment/\" + patient.id}>Citar</Button>\r\n\r\n                          <Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item href={\"/appointments/patient/\" + patient.id}>Citas</Dropdown.Item>\r\n                            <Dropdown.Item href={\"/patients/\" + patient.id + \"/obs\"}>Historia</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item href={\"/addinvoice/\" + patient.id}>Nueva factura</Dropdown.Item>\r\n                            <Dropdown.Item href={\"/invoices/patient/\" + patient.id}>Facturas</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item href={\"/patients/\" + patient.id}>Editar</Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                      }\r\n                      {/* comment */}\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div id={`collapse${index}`}\r\n                     className={\"collapse\" + (patient.expanded ? \" show\" : \"\")}\r\n                     aria-labelledby={`heading${index}`}\r\n                     data-parent=\"#accordion\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-8 col-sm-10\">\r\n                        <p>{patient.address}</p>\r\n                        <p>{patient.city}</p>\r\n                        <p>DNI: {patient.dni}</p>\r\n                        <p>Tel: {patient.phone}</p>\r\n                        <p>{patient.email}</p>\r\n\r\n                        <p className=\"badgePatient\">\r\n                          {patient.active ? (\r\n                            <span className=\"badge badge-primary\">\r\n                              Activo\r\n                            </span>\r\n                          ):(\r\n                            <span className=\"badge badge-danger\">\r\n                              Inactivo\r\n                            </span>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"col-4 col-sm-2\">\r\n                        <Link\r\n                          type=\"button\"\r\n                          to={\"/patients/\" + patient.id}\r\n                          className=\"btn btn-secondary\"\r\n                        >\r\n                          Editar\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 col-sm-12\">\r\n                        <p>Notas: {patient.description}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"paging\">\r\n            <div>\r\n              <span className=\"selectText\">{\"Refs por página: \"}</span>\r\n              <select onChange={this.handlePageSizeChange} value={pageSize}>\r\n                {this.pageSizes.map((size) => (\r\n                  <option key={size} value={size}>\r\n                    {size}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <div className=\"bbb\">\r\n                <Pagination\r\n                  className=\"my-3\"\r\n                  count={count}\r\n                  page={page}\r\n                  siblingCount={1}\r\n                  boundaryCount={1}\r\n                  variant=\"outlined\"\r\n                  shape=\"rounded\"\r\n                  onChange={this.handlePageChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Image src=\"https://github.com/sumifune/cotomo-front/workflows/Node.js%20CI/badge.svg\" rounded />\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n\r\n\r\n\r\n\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport './appointment-case.component.css';\r\n\r\n\r\nconst AppointmentCase = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  const isMobile = useMediaQuery({\r\n    query: '(max-width: 760px)'\r\n  })\r\n\r\n  let { service, estate } = props.appointment;\r\n\r\n  function calcStyle(service, estate){\r\n\r\n    const appointA = {\r\n      backgroundColor: '#bde4ea',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '0px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n    const appointAF = {\r\n      backgroundColor: '#bde400',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n    const appointAC = {\r\n      backgroundColor: '#ff4d4d',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n\r\n    const appointP = {\r\n      backgroundColor: '#f4c9c9',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n    const appointPF = {\r\n      backgroundColor: '#bde400',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n    const appointPC = {\r\n      backgroundColor: '#ff4d4d',\r\n      height: '40px',\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      // paddingLeft: '12px',\r\n      // paddingTop: '8px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: '4px',\r\n    };\r\n\r\n    switch (service) {\r\n      case 'Acupuntura':\r\n\r\n        switch (estate) {\r\n          case 'pending':\r\n            return appointA;\r\n          case 'fulfilled':\r\n            return appointAF;\r\n          case 'cancelled':\r\n            return appointAC;\r\n          default:\r\n            return {};\r\n        }\r\n      case 'Psicología':\r\n\r\n        switch (estate) {\r\n          case 'pending':\r\n            return appointP;\r\n          case 'fulfilled':\r\n            return appointPF;\r\n          case 'cancelled':\r\n            return appointPC;\r\n          default:\r\n            return {};\r\n        }\r\n      default:\r\n        return {};\r\n    }\r\n }\r\n\r\n  return (\r\n    <>\r\n      <div style={calcStyle(service, estate)} onClick={handleShow}>\r\n        { isMobile ?\r\n            props.appointment.madeBy?.name.substring(0,1) +\r\n            props.appointment.madeBy?.surname.substring(0,1) :\r\n            props.appointment.madeBy?.name}\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.appointment.madeBy?.name} {props.appointment.madeBy?.surname}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{props.appointment.service}</p>\r\n          <br/><small>creada: {moment(props.appointment.createdAt).fromNow()}</small>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          { props.appointment.estate === 'pending' ?\r\n              <div className=\"flex-container\">\r\n                <div>\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\r\n                      Cancelar\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item\r\n                        variant=\"danger\"\r\n                        aid={props.appointment.id}\r\n                        arrindx={props.index}\r\n                        indexdate={props.indexdate}\r\n                        onClick={(e) => {handleClose();props.cancelAppointment(e)}}\r\n                      >Cancelar la cita (definitivamente)</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    aid={props.appointment.id}\r\n                    arrindx={props.index}\r\n                    indexdate={props.indexdate}\r\n                    onClick={(e) => {handleClose();props.fulfillAppointment(e)}}\r\n                  >\r\n                    Confirmar\r\n                  </Button>\r\n                </div>\r\n\r\n              </div>\r\n            :\r\n            \"\"\r\n          }\r\n          { props.appointment.estate === 'fulfilled' ?\r\n            <div>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\r\n                  Cancelar\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    variant=\"danger\"\r\n                    aid={props.appointment.id}\r\n                    arrindx={props.index}\r\n                    indexdate={props.indexdate}\r\n                    onClick={(e) => {handleClose();props.cancelAppointment(e)}}\r\n                  >Cancelar la cita (definitivamente)</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n            :\r\n            \"\"\r\n          }\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentCase;\r\n","import React, { Component } from \"react\";\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport moment from \"moment\";\r\n// import 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport 'moment/locale/es';\r\n\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n// import Popover from 'react-bootstrap/Popover';\r\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\n\r\n// import AppointmentItem from './appointment-item';\r\nimport AppointmentCase from './appointment-case.component';\r\n\r\n\r\n\r\n\r\nimport './appointments-list.component.css';\r\n\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveAppointments = this.retrieveAppointments.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.deleteAppointment = this.deleteAppointment.bind(this);\r\n    this.previousDates = this.previousDates.bind(this);\r\n    this.followingDates = this.followingDates.bind(this);\r\n    this.fulfillAppointment = this.fulfillAppointment.bind(this);\r\n    this.cancelAppointment = this.cancelAppointment.bind(this);\r\n    this.redirectPatients = this.redirectPatients.bind(this);\r\n    // this.resize = this.resize.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      apointee: \"fff\",\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      selectedDate: moment(),\r\n      appointments: [],\r\n      service: \"Acupuntura\",\r\n      // showShortName: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    if (this.props.match.params.selected){\r\n      this.setState({\r\n        selectedDate: moment(this.props.match.params.selected, \"DD-MM-YYYY\"),\r\n      }, () => {\r\n       this.retrieveAppointments()\r\n      });\r\n    }else{\r\n      this.setState({\r\n        selectedDate: moment(),\r\n      }, () => {\r\n       this.retrieveAppointments()\r\n      });\r\n    }\r\n\r\n\r\n    // window.addEventListener(\"resize\", this.resize.bind(this));\r\n    // this.resize();\r\n\r\n    // this.retrieveAppointments();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  // componentWillUnmount() {\r\n  //     window.removeEventListener(\"resize\", this.resize.bind(this));\r\n  // }\r\n  // resize() {\r\n  //   console.log(window.innerWidth <= 600);\r\n  //     this.setState({showShortName: window.innerWidth <= 600});\r\n  // }\r\n  retrieveAppointments() {\r\n    const { selectedDate } = this.state;\r\n\r\n    AppointmentDataService.findByDateNext(selectedDate.format('DD/MM/YYYY'))\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { nextFiveDates } = response.data;\r\n        // console.log(nextFiveDates);\r\n        this.setState({\r\n          appointments: nextFiveDates,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    })}\r\n\r\n  deleteAppointment = (i,appointment) => {\r\n    console.log(\"---------- analizar: usar i o id de mongodb en key ----------------\");\r\n    console.log(i);\r\n    console.log(appointment);\r\n    console.log(\"-------------------------------------------------------------------\");\r\n\r\n    AppointmentDataService.delete(appointment)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n\r\n        this.setState(state => {\r\n          const appointments = state.appointments.filter((item, j) => i !== j);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n        });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  };\r\n\r\n  addAppointment(e) {\r\n\r\n    console.log(\"Esto no se ejecuta NUNCA\")\r\n    // REVISAR ESTO\r\n    var data = {\r\n      surname: this.props.match.params.surname,\r\n      hour: e.target.getAttribute('inx'),\r\n      date: this.state.selectedDate.format('DD/MM/YYYY'),\r\n      service: this.state.service,\r\n      estate: \"pending\",\r\n    };\r\n\r\n    AppointmentDataService.create(data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n          const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  previousDates(e) {\r\n    // console.log(this.state.apointee);\r\n    this.setState({\r\n      selectedDate: moment(this.state.selectedDate, \"DD-MM-YYYY\").add(-5,'days'),\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    });\r\n\r\n\r\n  }\r\n\r\n  followingDates(e) {\r\n    // console.log(moment(this.state.selectedDate, \"DD-MM-YYYY\").add(5,'days').format(\"DD-MM-YYYY\"));\r\n    this.setState({\r\n      selectedDate: moment(this.state.selectedDate, \"DD-MM-YYYY\").add(5,'days'),\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    });\r\n\r\n  }\r\n\r\n  cancelAppointment(e){\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n    const indexdate = e.target.getAttribute('indexdate');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let appointments = [...state.appointments];\r\n          appointments[indexdate][arrIndx] = response.data;\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  fulfillAppointment(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n    const indexdate = e.target.getAttribute('indexdate');\r\n\r\n    const data = {\r\n      estate: \"fulfilled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          // console.log(response.data);\r\n          // 1. Make a shallow copy of the items\r\n          let appointments = [...state.appointments];\r\n          // 2. Make a shallow copy of the item you want to mutate\r\n          // let item = {...appointments[arrIndx]};\r\n          // 3. Replace the property you're intested in\r\n          // item.name = 'newName';\r\n          // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n          appointments[indexdate][arrIndx] = response.data;\r\n\r\n          // sustituir el appo. por el que llega del backend en vez de concat\r\n          // const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  redirectPatients = (hour, day, selectedDate) => {\r\n    // console.log('red ' + dh);\r\n    // return <Redirect to={`/patients`}/>\r\n\r\n  // let momentDate = moment(date, \"DD-MM-YYYY\");\r\n  // let mongoDate = moment(momentDate).format('YYYY-MM-DD');\r\n\r\n\r\n    // console.log('lllllllllllllllllllllllllllllllllllllll')\r\n    // console.log(selectedDate);\r\n\r\n    let qdate = moment(this.state.selectedDate).add(day,'days').format('DD-MM-YYYY');\r\n    // console.log(qdate);\r\n\r\n    let id = hour + \"_\" + qdate + \"_\" + selectedDate;\r\n\r\n    // console.log(id);\r\n    this.props.history.push('/patients/appoint/' + id);\r\n  }\r\n\r\n  render() {\r\n\r\n    const timeSlotConainer = {\r\n      border: '1px solid lightgrey',\r\n      minHeight: '80px',\r\n    };\r\n    const hourHeader = {\r\n      border: '1px solid lightgrey',\r\n    };\r\n    const timeSlot = {\r\n      backgroundColor: 'lightgrey',\r\n      // height: '50px',\r\n      width: '100px',\r\n    };\r\n    const daySlot = {\r\n      backgroundColor: 'lightgrey',\r\n      // width: '100px',\r\n      // border: '1px solid black'\r\n    };\r\n\r\n\r\n    const dropdownService = {\r\n      paddingTop: '25px',\r\n    }\r\n\r\n    const aaaa = {\r\n      height: '40px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      // border: '1px solid black',\r\n    }\r\n\r\n    const {\r\n      appointments,\r\n      selectedDate,\r\n    } = this.state;\r\n\r\n    const timesX = ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00',\r\n    '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30',\r\n    '20:00', '20:30', '21:00'];\r\n    // console.log(selectedDate.format('DD/MM/YYYY'));\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          {/* minDate={\"01/01/2020\"} */}\r\n          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Fecha\"\r\n                format=\"DD/MM/yyyy\"\r\n                value={this.state.selectedDate}\r\n                onChange={this.handleDateChange}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        <div className=\"col-7\">\r\n          <div style={dropdownService}>\r\n            <ButtonGroup>\r\n              <Button variant=\"secondary\" onClick={this.previousDates}>Anteriores</Button>\r\n              <Button variant=\"secondary\" onClick={this.followingDates}>Siguientes</Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n\r\n\r\n          {/* --------------------------- HEADER --------------------------------------*/}\r\n          <div className=\"row\">\r\n            <div className=\"col-2 col-sm-1 padding-0\" style={daySlot}>\r\n            </div>\r\n            { Array.from({length: 5}, (item, date) => (\r\n              <div className=\"col col-sm\" key={date} style={hourHeader}>\r\n                {moment(selectedDate, \"DD-MM-YYYY\").add(date,'days').format('DD')}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          { timesX.map((hour) => (\r\n\r\n            <div className=\"row\" key={hour}>\r\n              <div className=\"col-2 col-sm-1 padding-0\" style={timeSlot}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-2\">\r\n                    {hour}\r\n                  </div>\r\n                  <div style={aaaa} className=\"col-10\">\r\n                    &nbsp;\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              { appointments && appointments.map((appointmentDates, indexDate) => (\r\n\r\n                <div className=\"col col-sm padding-0\"\r\n                  style={timeSlotConainer}\r\n                  key={indexDate}\r\n                  onClick={() => {\r\n                    // console.log((hour + 9).toString() + \":00\");\r\n                    this.redirectPatients(hour, indexDate, moment(this.state.selectedDate, \"DD-MM-YYYY\").format(\"DD-MM-YYYY\"));\r\n                    }\r\n                  }\r\n                >\r\n\r\n                  { appointmentDates && appointmentDates.map((appointment, index) => {\r\n\r\n                    return (hour) === appointment.hour ?\r\n                        <div key={index} className=\"appointmentItem\">\r\n                          <div onClick={(e) => {e.stopPropagation()}}>\r\n                          {/*\r\n                            <AppointmentItem\r\n                              appointment={appointment}\r\n                              index={index}\r\n                              indexdate={indexDate}\r\n                              fulfillAppointment={ this.fulfillAppointment }\r\n                              cancelAppointment={this.cancelAppointment}\r\n                            />\r\n                          */}\r\n                            <AppointmentCase\r\n                              appointment={appointment}\r\n                              index={index}\r\n                              indexdate={indexDate}\r\n                              fulfillAppointment={ this.fulfillAppointment }\r\n                              cancelAppointment={this.cancelAppointment}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                    : (hour) === appointment.hour ?\r\n\r\n                        <div key={index} className=\"appointmentItem\">\r\n                          <div onClick={(e) => {e.stopPropagation()}}>\r\n                          {/*\r\n                            <AppointmentItem\r\n                              appointment={appointment}\r\n                              index={index}\r\n                              indexdate={indexDate}\r\n                              fulfillAppointment={ this.fulfillAppointment }\r\n                              cancelAppointment={this.cancelAppointment}\r\n                            />\r\n                          */}\r\n                            <AppointmentCase\r\n                              appointment={appointment}\r\n                              index={index}\r\n                              indexdate={indexDate}\r\n                              fulfillAppointment={ this.fulfillAppointment }\r\n                              cancelAppointment={this.cancelAppointment}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                    :\r\n                      \"\"\r\n                    }\r\n                  )}\r\n\r\n\r\n                </div>\r\n\r\n              ))}\r\n\r\n            </div>\r\n\r\n          )\r\n\r\n\r\n          )\r\n\r\n        }\r\n\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport moment from \"moment\";\r\n// import 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport 'moment/locale/es';\r\n\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveAppointments = this.retrieveAppointments.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.deleteAppointment = this.deleteAppointment.bind(this);\r\n    this.setService = this.setService.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      apointee: \"\",\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      selectedDate:moment(),\r\n      appointments: [],\r\n      service: \"Acupuntura\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    this.retrieveAppointments();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  retrieveAppointments() {\r\n    const { selectedDate } = this.state;\r\n\r\n    AppointmentDataService.findByDate(selectedDate.format('DD/MM/YYYY'))\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { appointments } = response.data;\r\n\r\n        this.setState({\r\n          appointments: appointments,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    // console.log(date);\r\n\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    })}\r\n\r\n  deleteAppointment = (i,appointment) => {\r\n    console.log(\"---------- analizar: usar i o id de mongodb en key ----------------\");\r\n    console.log(i);\r\n    console.log(appointment);\r\n    console.log(\"-------------------------------------------------------------------\");\r\n\r\n    AppointmentDataService.delete(appointment)\r\n      .then((response) => {\r\n\r\n        console.log(response.data);\r\n\r\n        this.setState(state => {\r\n          const appointments = state.appointments.filter((item, j) => i !== j);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n        });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  };\r\n\r\n  addAppointment(e) {\r\n\r\n    // console.log(this.state.selectedDate.format('DD-MM-YYYY'));\r\n\r\n    var data = {\r\n      hour: e.target.getAttribute('inx'),\r\n      date: this.state.selectedDate.format('DD-MM-YYYY'),\r\n      service: this.state.service,\r\n      madeBy: this.props.match.params.id\r\n    };\r\n\r\n\r\n    // console.log(data);\r\n\r\n    AppointmentDataService.create(data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n          const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  setService(e) {\r\n    // console.log(e.target.getAttribute('service'));\r\n    this.setState({\r\n      service: e.target.getAttribute('service'),\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const timeSlotConainer = {\r\n      // backgroundColor: '#eaf2bf',\r\n      // height: '50px',\r\n      // padding: '10px',\r\n      border: '1px solid lightgrey',\r\n    };\r\n    const timeSlot = {\r\n      backgroundColor: 'lightgrey',\r\n      // height: '50px',\r\n    };\r\n    const appointmentAcu = {\r\n      backgroundColor: '#bde4ea',\r\n      // height: '50px',\r\n      margin: '5px',\r\n    };\r\n    const appointmentPsico = {\r\n      backgroundColor: '#f4c9c9',\r\n      // height: '50px',\r\n      margin: '5px',\r\n    };\r\n\r\n    const dropdownService = {\r\n      paddingTop: '25px',\r\n      // margin: '25px',\r\n      // backgroundColor: '#f4c9c9',\r\n      // border: '10px solid lightgrey',\r\n    }\r\n\r\n    const {\r\n      appointments,\r\n    } = this.state;\r\n\r\n    // console.log(selectedDate.format('DD/MM/YYYY'));\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          {/* minDate={\"01/01/2020\"} */}\r\n          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Fecha\"\r\n                format=\"DD/MM/yyyy\"\r\n                minDate={moment()}\r\n                value={this.state.selectedDate}\r\n                onChange={this.handleDateChange}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </div>\r\n        <div className=\"col-7\">\r\n          <div style={dropdownService}>\r\n            <InputGroup>\r\n              <DropdownButton\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-secondary\"\r\n                title=\"Servicio\"\r\n                id=\"input-group-dropdown-1\"\r\n              >\r\n                <Dropdown.Item href=\"#\" service=\"Acupuntura\" onClick={this.setService}>Acupuntura</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" service=\"Psicología\" onClick={this.setService}>Psicología</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item href=\"#\">Otros</Dropdown.Item>\r\n              </DropdownButton>\r\n              <FormControl aria-describedby=\"basic-addon1\" value={this.state.service} readOnly />\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          {Array.from({length: 12}, (item, hour) => (\r\n\r\n            <div className=\"row\" key={hour}>\r\n              <div className=\"col-2\" style={timeSlot}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-2\">\r\n                    {(hour + 9).toString() + \":00\"}\r\n                  </div>\r\n                  <div className=\"col-10\">\r\n                    <button style={{marginLeft: \"0px\"}}  inx={(hour + 9).toString() + \":00\"} onClick={this.addAppointment} className=\"btn btn-secondary\">\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-10\" style={timeSlotConainer}>\r\n\r\n                { appointments && appointments.map((appointment, index) => {\r\n\r\n                  return ((hour + 9).toString() + \":00\") === appointment.hour ?\r\n                    <Toast onClose={() => this.deleteAppointment(index, appointment.id)} style={ appointment.service === 'Acupuntura' ? appointmentAcu : appointmentPsico} key={index}>\r\n                      <Toast.Header>\r\n                        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n                        <strong className=\"mr-auto\">{appointment.service}</strong>\r\n                        <small>{moment(appointment.createdAt).fromNow()}</small>\r\n                      </Toast.Header>\r\n                      <Toast.Body>{appointment.madeBy.surname}, {appointment.madeBy.name}</Toast.Body>\r\n                    </Toast>\r\n                  :\r\n                    \"\"\r\n                  }\r\n                )}\r\n\r\n              </div>\r\n            </div>\r\n\r\n          ))}\r\n\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport moment from \"moment\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'moment/locale/es';\r\n\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nfunction SearchModal(props) {\r\n\r\n\tconst [date1, setDate1] = useState(moment());\r\n\tconst [date2, setDate2] = useState(moment());\r\n\tconst [filter, setFilter] = useState('pending');\r\n\r\n\r\n\tfunction doFilter(e){\r\n    console.log(e.target.getAttribute('filter'));\r\n    setFilter(e.target.getAttribute('filter'));\r\n    // this.setState({\r\n    //   filter: e.target.getAttribute('filter'),\r\n    // });\r\n  }\r\n  function handleChange(event) {\r\n    // Here, we invoke the callback with the new value\r\n    // props.handleState(event.target.value);\r\n    props.handleState(filter);\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={props.handleShow}>\r\n        Filtrar\r\n      </Button>\r\n\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Filtrar citas</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\t        <Container>\r\n\t          <Row>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-1\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date1}\r\n\t\t\t              onChange={setDate1}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-2\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date2}\r\n\t\t\t              onChange={setDate2}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t          </Row>\r\n\t          <Row>\r\n\t            <Col xs={12} md={8}>\r\n            <InputGroup>\r\n              <DropdownButton\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-secondary\"\r\n                title={filter}\r\n                id=\"input-group-dropdown-1\"\r\n              >\r\n                <Dropdown.Item href=\"#\" filter=\"pending\" onClick={doFilter}>Pendientes</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"cancelled\" onClick={doFilter}>Canceladas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"fulfilled\" onClick={doFilter}>Cumplidas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"all\" onClick={doFilter}>Todas</Dropdown.Item>\r\n              </DropdownButton>\r\n              {/*<FormControl aria-describedby=\"basic-addon1\" value={this.state.filter} readOnly />*/}\r\n            </InputGroup>\r\n\t            </Col>\r\n\t          </Row>\r\n\r\n\t        </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Cerrar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleChange}>\r\n            Filtrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchModal;","import React, { Component } from \"react\";\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport Card from 'react-bootstrap/Card';\r\nimport SearchModal from \"./search.component\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveAppointments = this.retrieveAppointments.bind(this);\r\n    this.setFilter = this.setFilter.bind(this);\r\n    this.cancelAppointment = this.cancelAppointment.bind(this);\r\n    this.fulfillAppointment = this.fulfillAppointment.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n    this.handleShowModal = this.handleShowModal.bind(this);\r\n    this.handleState = this.handleState.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      filter: \"pending\",\r\n      selectedDate: moment(),\r\n      appointments: [],\r\n      service: \"Acupuntura\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    console.log('kkkkkkkkkkkkkkk');\r\n    this.retrieveAppointments();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  retrieveAppointments() {\r\n    const { id } = this.state;\r\n\r\n    AppointmentDataService.findByPatientId(id)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { appointments } = response.data;\r\n\r\n        this.setState({\r\n          appointments: appointments,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    // console.log(date);\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    })\r\n  }\r\n\r\n  cancelAppointment(e) {\r\n\r\n  \tconst id = e.target.getAttribute('aid');\r\n  \tconst arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        console.log(response.data);\r\n        this.setState(state => {\r\n\r\n        \t// console.log(response.data);\r\n\t\t\t    // 1. Make a shallow copy of the items\r\n\t\t\t    let appointments = [...state.appointments];\r\n\t\t\t    // 2. Make a shallow copy of the item you want to mutate\r\n\t\t\t    // let item = {...appointments[arrIndx]};\r\n\t\t\t    // 3. Replace the property you're intested in\r\n\t\t\t    // item.name = 'newName';\r\n\t\t\t    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n\t\t\t    appointments[arrIndx] = response.data;\r\n\r\n        \t// sustituir el appo. por el que llega del backend en vez de concat\r\n          // const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  fulfillAppointment(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"fulfilled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let appointments = [...state.appointments];\r\n          appointments[arrIndx] = response.data;\r\n\r\n          console.log(appointments);\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n  setFilter(e) {\r\n    // console.log(e.target.getAttribute('filter'));\r\n    this.setState({\r\n      filter: e.target.getAttribute('filter'),\r\n    });\r\n  }\r\n\r\n  handleState(filter) {\r\n    // console.log(filter);\r\n    this.setState({\r\n      show: false,\r\n      filter: filter,\r\n    });\r\n  }\r\n  handleCloseModal() {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  }\r\n\r\n  handleShowModal() {\r\n    this.setState({\r\n      show: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      appointments,\r\n      filter,\r\n      show,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n\r\n          { appointments && appointments.filter(appointment => filter === 'all' ? true : appointment.estate === filter).map((appointment, index) => {\r\n\r\n            return <Card style={{ marginBottom: '10px', marginTop: '10px' }} key={index}>\r\n              <Card.Body>\r\n                <Card.Title>{appointment.service}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {moment(appointment.date).format(\"DD-MM-YYYY\")}\r\n                  &nbsp;a las {appointment.hour}\r\n                  </Card.Subtitle>\r\n                <Card.Text>\r\n                  {/*{this.props.match.params.id}*/}\r\n                  {appointment.madeBy.name}&nbsp;{appointment.madeBy.surname}<br/>\r\n                  <small>creada {moment(appointment.createdAt).fromNow()}</small><br/>\r\n                  <small>{appointment.id}</small><br/>\r\n                </Card.Text>\r\n                { appointment.estate === \"pending\" ? <div>\r\n                <Card.Link href=\"\" aid={appointment.id} arrindx={index} onClick={this.cancelAppointment}>Cancelar</Card.Link>\r\n                <Card.Link href=\"\" aid={appointment.id} arrindx={index} onClick={this.fulfillAppointment}>Cumplir</Card.Link>\r\n                </div>\r\n                : appointment.estate === \"fulfilled\" ? <span className=\"badge badge-success\">Cumplida</span> :\r\n                <span className=\"badge badge-warning\">Cancelada</span>\r\n                }\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            }\r\n          )}\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div style={{ /*width: '18rem'*/ }} className=\"col-12\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <SearchModal show={show} handleClose={this.handleCloseModal} handleShow={this.handleShowModal} handleState={this.handleState}/>\r\n          </div>\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = process.env.NODE_ENV !== 'production' ?\r\n\t\t\t\t\t\t\t  process.env.REACT_APP_BASE_URL_DEVELOPMENT :\r\n\t\t\t\t\t\t\t\tprocess.env.REACT_APP_BASE_URL_PRODUCTION;\r\n\r\nexport default axios.create({\r\n  baseURL: baseURL,\r\n  // headers: {\r\n  //   \"Content-type\": \"application/json\",\r\n  // },\r\n  responseType: 'blob',\r\n});\r\n\r\n\r\n// axios({\r\n//   url: 'http://localhost:3000/static/example.pdf',\r\n// });","import http from \"../http-common\";\r\nimport dd from \"../download\";\r\n\r\nclass InvoiceDataService {\r\n  getAll(params) {\r\n    return http.get(\"/invoices\", { params });\r\n  }\r\n\r\n  generateExcel(params) {\r\n    return http.get(\"/invoices/genexcel\", { params });\r\n  }\r\n\r\n  downloadExcel() {\r\n    return dd.get(\"/invoices/downloadexcel\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/invoices/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/invoices\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/invoices/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/invoices/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/invoices`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/invoices?surname=${surname}`);\r\n  }\r\n\r\n  findByPatientId(id) {\r\n    return http.get(`/invoices/patient/${id}`);\r\n  }\r\n\r\n  findByDate(date) {\r\n    return http.get(`/invoices/scheduled?date=${date}`);\r\n  }\r\n\r\n  findByDateNext(date) {\r\n    return http.get(`/invoices/scheduled/next?date=${date}`);\r\n  }\r\n}\r\n\r\nexport default new InvoiceDataService();\r\n","import React, { Component } from \"react\";\r\nimport InvoiceDataService from \"../services/invoice.service\";\r\n// import { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport './invoices-list.component.css';\r\n// import Button from 'react-bootstrap/Button';\r\n// import SearchModal from \"./search.component\";\r\nimport moment from \"moment\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'moment/locale/es';\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n// import SplitButton from 'react-bootstrap/SplitButton';\r\n// import ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport MediaQuery from 'react-responsive';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class InvoicesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchSurname = this.onChangeSearchSurname.bind(this);\r\n    this.retrieveInvoices = this.retrieveInvoices.bind(this);\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n    this.setDate1 = this.setDate1.bind(this);\r\n    this.setDate2 = this.setDate2.bind(this);\r\n    this.cancelInvoice = this.cancelInvoice.bind(this);\r\n    // this.payInvoice = this.payInvoice.bind(this);\r\n    this.sayHi = this.sayHi.bind(this);\r\n    this.generateExcel = this.generateExcel.bind(this);\r\n    this.descExcel = this.descExcel.bind(this);\r\n\r\n    this.state = {\r\n      invoices: [],\r\n      searchSurname: \"\",\r\n      date1: moment().startOf('quarter'),\r\n      date2: moment(),\r\n      page: 1,\r\n      count: 0,\r\n      pageSize: 6,\r\n      total: 0,\r\n      numberInvoices: 0,\r\n      numCanInvoices: 0,\r\n      downloadExcel: false,\r\n    };\r\n\r\n    this.pageSizes = [3, 6, 9];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveInvoices();\r\n  }\r\n\r\n  onChangeSearchSurname(e) {\r\n    const searchSurname = e.target.value;\r\n\r\n    this.setState({\r\n      searchSurname: searchSurname,\r\n    });\r\n  }\r\n\r\n  getRequestParams(searchSurname, date1, date2, page, pageSize) {\r\n    let params = {};\r\n\r\n    if (searchSurname) {\r\n      params[\"surname\"] = searchSurname;\r\n    }\r\n\r\n    if (date1) {\r\n      params[\"date1\"] = date1;\r\n    }\r\n\r\n    if (date2) {\r\n      params[\"date2\"] = date2;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  generateExcel() {\r\n    const { searchSurname, date1, date2, page, pageSize } = this.state;\r\n    const params = this.getRequestParams(searchSurname, date1.format(\"DD-MM-YYYY\"), date2.format(\"DD-MM-YYYY\"), page, pageSize);\r\n\r\n    InvoiceDataService.generateExcel(params)\r\n      .then((response) => {\r\n        const { estate } = response.data;\r\n\r\n        this.setState({\r\n          downloadExcel: estate,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  descExcel() {\r\n    InvoiceDataService.downloadExcel()\r\n      .then((response) => {\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', 'Acupuntura.xlsx');\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    // console.log('descargando...');\r\n  }\r\n\r\n  retrieveInvoices() {\r\n    const { searchSurname, date1, date2, page, pageSize } = this.state;\r\n    const params = this.getRequestParams(searchSurname, date1.format(\"DD-MM-YYYY\"), date2.format(\"DD-MM-YYYY\"), page, pageSize);\r\n\r\n    InvoiceDataService.getAll(params)\r\n      .then((response) => {\r\n        const { invoices, totalPages, totalInvoices, numberInvoices, numCanInvoices } = response.data;\r\n\r\n        this.setState({\r\n          invoices: invoices,\r\n          count: totalPages,\r\n          // total: invoices.map(amount).reduce(sum),\r\n          total: totalInvoices,\r\n          numberInvoices: numberInvoices,\r\n          numCanInvoices: numCanInvoices,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event, value) {\r\n    this.setState(\r\n      {\r\n        page: value,\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.setState(\r\n      {\r\n        pageSize: event.target.value,\r\n        page: 1\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      console.log('enter press here! ');\r\n      this.retrieveInvoices();\r\n    }\r\n  }\r\n\r\n  toggleMenu(event){\r\n    // console.log(event.target.getAttribute('inx'));\r\n    // 1. Make a shallow copy of the items\r\n    let invoices = [...this.state.invoices];\r\n    // 2. Make a shallow copy of the item you want to mutate\r\n    let invoice = {...invoices[event.target.getAttribute('inx')]};\r\n    // console.log(invoice);\r\n    // 3. Replace the property you're intested in\r\n    invoice.expanded = !!!invoice.expanded;\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    invoices[event.target.getAttribute('inx')] = invoice;\r\n    // 5. Set the state to our new copy\r\n    this.setState({invoices});\r\n  }\r\n\r\n  setDate1(date) {\r\n    this.setState(\r\n      {\r\n        date1: date,\r\n        pageSize: 3,\r\n        page: 1,\r\n        count: 0\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  setDate2(date) {\r\n    this.setState(\r\n      {\r\n        date2: date,\r\n        pageSize: 3,\r\n        page: 1,\r\n        count: 0\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelInvoice(e) {\r\n\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          // console.log(response.data);\r\n          // 1. Make a shallow copy of the items\r\n          let invoices = [...state.invoices];\r\n          // 2. Make a shallow copy of the item you want to mutate\r\n          // let item = {...invoices[arrIndx]};\r\n          // 3. Replace the property you're intested in\r\n          // item.name = 'newName';\r\n          // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n          invoices[arrIndx] = response.data;\r\n\r\n          // sustituir el appo. por el que llega del backend en vez de concat\r\n          // const invoices = state.invoices.concat(response.data);\r\n\r\n          let total = state.total;\r\n          total = total - response.data.total;\r\n\r\n\r\n          let numberInvoices = state.numberInvoices;\r\n          numberInvoices = numberInvoices - 1;\r\n\r\n          let numCanInvoices = state.numCanInvoices;\r\n          numCanInvoices = numCanInvoices + 1;\r\n\r\n\r\n          return {\r\n            invoices,\r\n            total,\r\n            numberInvoices,\r\n            numCanInvoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  sayHi() {\r\n    console.log('hi');\r\n  }\r\n  render() {\r\n\r\n    const {\r\n      searchSurname,\r\n      invoices,\r\n      date1,\r\n      date2,\r\n      page,\r\n      count,\r\n      pageSize,\r\n      total,\r\n      numberInvoices,\r\n      numCanInvoices,\r\n      downloadExcel,\r\n    } = this.state;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"input-group mb-3\"  style={{ marginTop: '10px' }}>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Buscar por apellido\"\r\n                value={searchSurname}\r\n                onChange={this.onChangeSearchSurname}\r\n                onKeyPress={this.handleKeyPress}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  className=\"btn btn-outline-secondary\"\r\n                  type=\"button\"\r\n                  onClick={this.retrieveInvoices}\r\n                >\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog-1\"\r\n                format=\"DD/MM/yyyy\"\r\n                value={date1}\r\n                onChange={this.setDate1}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog-2\"\r\n                format=\"DD/MM/yyyy\"\r\n                value={date2}\r\n                onChange={this.setDate2}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\" style={{ marginTop: '10px' }}>\r\n          <div className=\"col-7 col-sm-9\">\r\n            <span>Total: {total} | #: {numberInvoices} | X: {numCanInvoices}</span>\r\n          </div>\r\n          <div className=\"col-5 col-sm-3\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={ downloadExcel ? this.descExcel : this.generateExcel}\r\n              className=\"float-right\"\r\n            >\r\n              { downloadExcel ? \"Descargar\" : \"Generar Excel\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n          { invoices && invoices.map((invoice, index) => {\r\n\r\n            return <div className=\"row\" key={index} style={{ marginTop: '10px' }}>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"card\" style={{ marginBottom: '10px' }} key={index}>\r\n                          <div className=\"card-header\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-8\">\r\n                                {invoice.inumber}/{moment(invoice.createdAt).format('YYYY')}&nbsp;&nbsp;&nbsp;{moment(invoice.date).format(\"DD-MM-YYYY\")}\r\n\r\n                              </div>\r\n                              <div className=\"col-4\">\r\n\r\n                                { invoice.estate === \"emitted\" ?\r\n\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                  <DropdownButton\r\n                                    variant=\"danger\"\r\n                                    size=\"sm\"\r\n                                    id=\"dropdown-basic-button\"\r\n                                    title=\"Cancelar\">\r\n                                    <Dropdown.Item\r\n                                      href=\"\"\r\n                                      aid={invoice.id}\r\n                                      arrindx={index}\r\n                                      onClick={this.cancelInvoice}\r\n                                    >\r\n                                      Irreversiblemente\r\n                                    </Dropdown.Item>\r\n                                  </DropdownButton>\r\n\r\n                                </div>\r\n                                : invoice.estate === \"cancelled\" ?\r\n                                  <div className=\"d-flex justify-content-end\">\r\n                                    <span className=\"badge badge-danger\">Cancelada</span>\r\n                                  </div>\r\n                                :\r\n                                  <div className=\"d-flex justify-content-end\">\r\n                                    <span className=\"badge badge-danger\">Pagada</span>\r\n                                  </div>\r\n                                }\r\n\r\n\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <h6 className=\"card-title\">\r\n                              {invoice.name.charAt(0).toUpperCase() + invoice.name.slice(1)}&nbsp;\r\n                              {invoice.surname.charAt(0).toUpperCase() + invoice.surname.slice(1)}\r\n                            </h6>\r\n                            <p className=\"card-text\">\r\n                              {invoice.address}&nbsp;-&nbsp;{invoice.city}\r\n                              <br/>\r\n                              {invoice.dni}\r\n                            </p>\r\n                            <div className=\"row\" style={{ borderRadius: '3px',background: '#F7F7F7', border: '1px solid lightgrey'}}>\r\n                              <div className=\"col-6 col-sm-6\">\r\n                                <span>Concepto</span>\r\n                              </div>\r\n                              <div className=\"col-0 col-sm-1 d-none d-sm-block\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                <span>Ses</span>\r\n                              </div>\r\n                              <div className=\"col-2 col-sm-2\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                Base\r\n                              </div>\r\n                              <div className=\"col-1 col-sm-1\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                <span>IVA</span>\r\n                              </div>\r\n                              <div className=\"col-3 col-sm-2\">\r\n                                <span>Total</span>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-6 col-sm-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    <MediaQuery maxWidth={576}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      {/* You can also use a function (render prop) as a child */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      {(matches) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        matches\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          ? <span>{ invoice.sessions + \"x \" + invoice.concept }</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          : <span>{ invoice.concept }</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    </MediaQuery>\r\n                              </div>\r\n                              <div className=\"col-0 col-sm-1 d-none d-sm-block\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                <span>{invoice.sessions}</span>\r\n                              </div>\r\n                              <div className=\"col-2 col-sm-2\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                <span>{invoice.base}</span>\r\n                              </div>\r\n                              <div className=\"col-1 col-sm-1\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                                <span>{invoice.iva}</span>\r\n                              </div>\r\n                              <div className=\"col-3 col-sm-2\">\r\n                                <span>{invoice.total}</span>\r\n                              </div>\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-6\">\r\n                                {/* <small>creada {moment(invoice.createdAt).fromNow()}</small> */}\r\n                                <Link to={{\r\n                                  pathname: '/invoices/pdf/' + invoice.inumber,\r\n                                  state: {\r\n                                    invoice: invoice,\r\n                                    xxx: invoice.name,\r\n                                  },\r\n                                  myCustomProps: \"invoice\"\r\n                                }}>\r\n                                  Imprimir\r\n                                </Link>\r\n                              </div>\r\n                              <div className=\"col-6 d-flex justify-content-end\" style={{paddingTop: '3px'}}>\r\n                                <small>{invoice.emittedTo ? invoice.emittedTo._id : \"ficha eliminada\"}</small>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n\r\n            }\r\n          )}\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12\" style={{ marginBottom: '10px' }}>\r\n              <div className=\"paging\">\r\n                <div>\r\n                  <span className=\"selectText\">{\"Refs por página: \"}</span>\r\n                  <select onChange={this.handlePageSizeChange} value={pageSize}>\r\n                    {this.pageSizes.map((size) => (\r\n                      <option key={size} value={size}>\r\n                        {size}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <div className=\"bbb\">\r\n                    <Pagination\r\n                      className=\"my-3\"\r\n                      count={count}\r\n                      page={page}\r\n                      siblingCount={1}\r\n                      boundaryCount={1}\r\n                      variant=\"outlined\"\r\n                      shape=\"rounded\"\r\n                      onChange={this.handlePageChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </>\r\n    );\r\n  }\r\n}","import http from \"../http-common\";\r\n\r\nclass ServiceDataService {\r\n  getAll(params) {\r\n    return http.get(\"/services\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/services/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/services\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/services/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/services/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/services`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/services?surname=${surname}`);\r\n  }\r\n\r\n  findObservations(id) {\r\n    return http.get(`/services/${id}/obs`);\r\n  }\r\n\r\n  deleteObservation(id, observation) {\r\n    return http.delete(`/services/${id}/obs?observation=${observation}`);\r\n  }\r\n\r\n  addObservation(id, data) {\r\n    return http.put(`/services/${id}/addob`, data);\r\n  }\r\n}\r\n\r\nexport default new ServiceDataService();\r\n","import React, { Component } from \"react\";\r\nimport InvoiceDataService from \"../services/invoice.service\";\r\nimport ServiceDataService from \"../services/service.service\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default class AddVoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeConcept = this.onChangeConcept.bind(this);\r\n    this.onChangeSessions = this.onChangeSessions.bind(this);\r\n    this.saveInvoice = this.saveInvoice.bind(this);\r\n    this.newInvoice = this.newInvoice.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      emittedTo: this.props.match.params.id,\r\n      concept: \"\",\r\n      sessions: 1,\r\n      services: [],\r\n      submitted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.retrieveServices();\r\n  }\r\n  retrieveServices() {\r\n\r\n    ServiceDataService.getAll({})\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { data } = response.data;\r\n\r\n        // console.log(data);\r\n        console.log(data[0].id);\r\n        this.setState({\r\n          services: data,\r\n          concept: data[0].id\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  onChangeConcept(e) {\r\n    // const id = e.target.getAttribute('aid');\r\n    // console.log(id);\r\n\r\n    // console.log(e.target);\r\n    // console.log(e.target.options[e.target.selectedIndex].dataset.serviceid);\r\n    console.log(e.target.options[e.target.selectedIndex].getAttribute('serviceid'));\r\n\r\n\r\n    this.setState({\r\n      concept: e.target.options[e.target.selectedIndex].getAttribute('serviceid'),\r\n    });\r\n  }\r\n  onChangeSessions(e) {\r\n    console.log(e.target.value)\r\n    this.setState({\r\n      sessions: e.target.value,\r\n    });\r\n  }\r\n  saveInvoice() {\r\n    var data = {\r\n      emittedTo: this.state.emittedTo,\r\n      concept: this.state.concept,\r\n      sessions: this.state.sessions\r\n    };\r\n\r\n\r\n    console.log(data);\r\n    InvoiceDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newInvoice() {\r\n    this.setState((prevState) => ({\r\n      id: null,\r\n      emittedTo: this.props.match.params.id,\r\n      counter: prevState.counter,\r\n      sessions: 1,\r\n      submitted: false,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n\r\n    const { services, sessions } = this.state;\r\n\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-12\" style={{ marginTop: '10px'}}>\r\n          <div className=\"submit-form\">\r\n            {this.state.submitted ? (\r\n              <div>\r\n                <h4>Factura creada correctamente!</h4>\r\n                <button className=\"btn btn-success\" onClick={this.newInvoice}>\r\n                  Nueva\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <Form>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                      <Form.Label>Concepto</Form.Label>\r\n                      <Form.Control as=\"select\" onChange={this.onChangeConcept}>\r\n\r\n                        { services && services.map((service, index) => {\r\n\r\n                          return <option key={index} serviceid={service.id} >{service.name}</option>\r\n\r\n                          }\r\n                        )}\r\n\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\" onChange={this.onChangeSessions}>\r\n                      <Form.Label>Sesiones</Form.Label>\r\n                      <Form.Control type=\"text\" defaultValue={sessions}/>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </div>\r\n                <button style={{marginBottom: \"25px\"}} onClick={this.saveInvoice} className=\"btn btn-secondary\">\r\n                  Añadir\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport moment from \"moment\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'moment/locale/es';\r\n\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nfunction SearchModal(props) {\r\n\r\n\tconst [date1, setDate1] = useState(moment());\r\n\tconst [date2, setDate2] = useState(moment());\r\n\tconst [filter, setFilter] = useState('emitted');\r\n\r\n\r\n\tfunction doFilter(e){\r\n    console.log(e.target.getAttribute('filter'));\r\n    setFilter(e.target.getAttribute('filter'));\r\n    // this.setState({\r\n    //   filter: e.target.getAttribute('filter'),\r\n    // });\r\n  }\r\n  function handleChange(event) {\r\n    // Here, we invoke the callback with the new value\r\n    // props.handleState(event.target.value);\r\n    props.handleState(filter);\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={props.handleShow}>\r\n        Filtrar\r\n      </Button>\r\n\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\t        <Container>\r\n\t          <Row>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-1\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date1}\r\n\t\t\t              onChange={setDate1}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-2\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date2}\r\n\t\t\t              onChange={setDate2}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t          </Row>\r\n\t          <Row>\r\n\t            <Col xs={12} md={8}>\r\n            <InputGroup>\r\n              <DropdownButton\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-secondary\"\r\n                title={filter}\r\n                id=\"input-group-dropdown-1\"\r\n              >\r\n                <Dropdown.Item href=\"#\" filter=\"emitted\" onClick={doFilter}>Emitidas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"cancelled\" onClick={doFilter}>Canceladas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"payed\" onClick={doFilter}>Pagadas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"all\" onClick={doFilter}>Todas</Dropdown.Item>\r\n              </DropdownButton>\r\n              {/*<FormControl aria-describedby=\"basic-addon1\" value={this.state.filter} readOnly />*/}\r\n            </InputGroup>\r\n\t            </Col>\r\n\t          </Row>\r\n\r\n\t        </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleChange}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchModal;","import React, { Component } from \"react\";\r\nimport InvoiceDataService from \"../services/invoice.service\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport Card from 'react-bootstrap/Card';\r\nimport SearchModal from \"./search-modal-invoices.component\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class InvoicesListByPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveInvoices = this.retrieveInvoices.bind(this);\r\n    this.setFilter = this.setFilter.bind(this);\r\n    this.cancelInvoice = this.cancelInvoice.bind(this);\r\n    this.payInvoice = this.payInvoice.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n    this.handleShowModal = this.handleShowModal.bind(this);\r\n    this.handleState = this.handleState.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      filter: \"emitted\",\r\n      selectedDate: moment(),\r\n      invoices: [],\r\n      concept: \"Acupuntura\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    this.retrieveInvoices();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  retrieveInvoices() {\r\n    const { id } = this.state;\r\n\r\n    InvoiceDataService.findByPatientId(id)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { invoices } = response.data;\r\n\r\n        this.setState({\r\n          invoices: invoices,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    // console.log(date);\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveInvoices()\r\n    })\r\n  }\r\n\r\n  cancelInvoice(e) {\r\n\r\n  \tconst id = e.target.getAttribute('aid');\r\n  \tconst arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n        \t// console.log(response.data);\r\n\t\t\t    // 1. Make a shallow copy of the items\r\n\t\t\t    let invoices = [...state.invoices];\r\n\t\t\t    // 2. Make a shallow copy of the item you want to mutate\r\n\t\t\t    // let item = {...invoices[arrIndx]};\r\n\t\t\t    // 3. Replace the property you're intested in\r\n\t\t\t    // item.name = 'newName';\r\n\t\t\t    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n\t\t\t    invoices[arrIndx] = response.data;\r\n\r\n        \t// sustituir el appo. por el que llega del backend en vez de concat\r\n          // const invoices = state.invoices.concat(response.data);\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  payInvoice(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"payed\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let invoices = [...state.invoices];\r\n          invoices[arrIndx] = response.data;\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n  setFilter(e) {\r\n    // console.log(e.target.getAttribute('filter'));\r\n    this.setState({\r\n      filter: e.target.getAttribute('filter'),\r\n    });\r\n  }\r\n\r\n  handleState(filter) {\r\n    // console.log(filter);\r\n    this.setState({\r\n      show: false,\r\n      filter: filter,\r\n    });\r\n  }\r\n  handleCloseModal() {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  }\r\n\r\n  handleShowModal() {\r\n    this.setState({\r\n      show: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      invoices,\r\n      filter,\r\n      show,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\" style={{ marginTop: '10px'}}>\r\n        <div className=\"col-md-12\">\r\n          { invoices && invoices.filter(invoice => filter === 'all' ? true : invoice.estate === filter).map((invoice, index) => {\r\n\r\n            return <Card style={{ marginBottom: '10px'/*width: '18rem'*/ }} key={index}>\r\n              <Card.Body>\r\n                <Card.Title>{invoice.concept}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                \t{moment(invoice.date).format(\"DD-MM-YYYY\")}\r\n                \t</Card.Subtitle>\r\n                <Card.Text>\r\n                \t{/*{this.props.match.params.id}*/}\r\n                \t{invoice.emittedTo.name}&nbsp;{invoice.emittedTo.surname}<br/>\r\n                \t<small>creada {moment(invoice.createdAt).fromNow()}</small><br/>\r\n                </Card.Text>\r\n                { invoice.estate === \"emitted\" ? <div>\r\n                <Card.Link href=\"#\" aid={invoice.id} arrindx={index} onClick={this.cancelInvoice}>Cancelar</Card.Link>\r\n                <Card.Link href=\"#\" aid={invoice.id} arrindx={index} onClick={this.payInvoice}>Pagar</Card.Link>\r\n                </div>\r\n                : invoice.estate === \"payed\" ? <span className=\"badge badge-success\">Pagada</span> :\r\n                <span className=\"badge badge-warning\">Cancelada</span>\r\n                }\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            }\r\n          )}\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div style={{ /*width: '18rem'*/ }} className=\"col-12\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <SearchModal show={show} handleClose={this.handleCloseModal} handleShow={this.handleShowModal} handleState={this.handleState}/>\r\n          </div>\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Text, Image, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: '#112131',\r\n    // borderBottomStyle: 'solid',\r\n    alignItems: 'stretch',\r\n    marginTop: 60,\r\n  },\r\n  containerFactura: {\r\n    flexDirection: 'row',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#112131',\r\n    borderBottomStyle: 'solid',\r\n    alignItems: 'stretch',\r\n    marginTop: 50,\r\n  },\r\n  detailColumn: {\r\n    flexDirection: 'column',\r\n    flexGrow: 9,\r\n    textTransform: 'uppercase',\r\n    // border: 1,\r\n    // backgroundColor: 'yellow'\r\n  },\r\n  linkColumn: {\r\n    flexDirection: 'column',\r\n    flexGrow: 2,\r\n    alignSelf: 'flex-end',\r\n    justifySelf: 'flex-end',\r\n  },\r\n  name: {\r\n    fontSize: 24,\r\n  },\r\n  address: {\r\n    fontSize: 10,\r\n  },\r\n  subtitle: {\r\n    fontSize: 10,\r\n    justifySelf: 'flex-end',\r\n  },\r\n  image: {\r\n    // marginBottom: 10,\r\n    width: 200,\r\n    height: 107,\r\n  },\r\n});\r\n\r\nconst Header = () => (\r\n  <>\r\n  <View style={styles.container}>\r\n    <View style={styles.detailColumn}>\r\n      <Image\r\n        src=\"/logo_co_2019_ok2peque_NEGRO.jpg\"\r\n        style={styles.image}\r\n      />\r\n    </View>\r\n    <View style={styles.linkColumn}>\r\n      <Text style={styles.address}>Calle Castelao 13-15, bajo</Text>\r\n      <Text style={styles.address}>27001 Lugo</Text>\r\n      <Text style={styles.address}>33535792K</Text>\r\n      <Text style={styles.address}>Telf: 982 203 954</Text>\r\n    </View>\r\n  </View>\r\n  <View style={styles.containerFactura}>\r\n    <Text style={styles.name}>Factura</Text>\r\n  </View>\r\n  </>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    alignItems: 'stretch',\r\n    marginTop: 25,\r\n  },\r\n  numberColumn: {\r\n    flexDirection: 'column',\r\n    flexGrow: 9,\r\n    textTransform: 'uppercase',\r\n  },\r\n  dateColumn: {\r\n    flexDirection: 'column',\r\n    flexGrow: 2,\r\n    alignSelf: 'flex-end',\r\n    justifySelf: 'flex-end',\r\n    width: 30,\r\n    textAlign: 'right',\r\n  },\r\n  basicFont: {\r\n    fontSize: 11,\r\n  },\r\n});\r\n\r\nconst InvoiceID = (props) => (\r\n  <View style={styles.container}>\r\n    <View style={styles.numberColumn}>\r\n      <Text style={styles.basicFont}>Número: {props.number}</Text>\r\n    </View>\r\n    <View style={styles.dateColumn}>\r\n      <Text style={[styles.basicFont, { width: 100, textAlign: 'right' }]}>Fecha: {props.date}</Text>\r\n    </View>\r\n  </View>\r\n);\r\n\r\nexport default InvoiceID;","import React from 'react';\r\n\r\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  personalData: {\r\n    flexDirection: 'column',\r\n    backgroundColor: '#f2f2f2',\r\n    marginTop: 60,\r\n    paddingLeft: 30,\r\n    paddingBottom: 30,\r\n  },\r\n  containerRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'stretch',\r\n    marginTop: 20,\r\n  },\r\n  attribute: {\r\n    fontSize: 11,\r\n  },\r\n});\r\n\r\nconst PersonalData = (props) => (\r\n  <View style={styles.personalData}>\r\n    <View style={styles.containerRow}>\r\n      <Text style={styles.attribute}>Nombre: {props.name} {props.surname}</Text>\r\n    </View>\r\n    <View style={styles.containerRow}>\r\n      <Text style={styles.attribute}>Dirección: {props.address}</Text>\r\n    </View>\r\n    <View style={styles.containerRow}>\r\n      <Text style={styles.attribute}>DNI: {props.dni}</Text>\r\n    </View>\r\n  </View>\r\n);\r\n\r\nexport default PersonalData;","import React from 'react';\r\n\r\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  invoiceData: {\r\n    flexDirection: 'column',\r\n    border: 1,\r\n    alignItems: 'stretch',\r\n    marginTop: 60,\r\n  },\r\n  containerHeaders: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginTop: 0,\r\n  },\r\n  bolding: {\r\n    fontWeight: 900,\r\n    fontSize: 12,\r\n    textDecoration: 'underline',\r\n    textTransform: 'bold',\r\n  },\r\n  detailValue: {\r\n    fontSize: 11,\r\n  },\r\n  containerDetails: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginTop: 0,\r\n  },\r\n});\r\n\r\nconst InvoiceDetails = (props) => (\r\n    <View style={styles.invoiceData}>\r\n      <View style={styles.containerHeaders}>\r\n        <View style={[styles.detailValue, { width: 150, margin: 5 }]}>\r\n          <Text style={styles.bolding}>Concepto</Text>\r\n        </View>\r\n        <View style={[styles.detailValue, { width: 50, margin: 5 }]}>\r\n          <Text style={styles.bolding}>Sesiones</Text>\r\n        </View>\r\n        <View style={[styles.detailValue, { width: 50, margin: 5 }]}>\r\n          <Text style={styles.bolding}>IVA</Text>\r\n        </View>\r\n        <View style={[styles.detailValue, { width: 50, margin: 5 }]}>\r\n          <Text style={styles.bolding}>Base</Text>\r\n        </View>\r\n        <View style={[styles.detailValue, { width: 50, margin: 5 }]}>\r\n          <Text style={styles.bolding}>Importe</Text>\r\n        </View>\r\n      </View>\r\n      <View style={styles.containerDetails}>\r\n        <View style={[styles.detailValue, { width: 150, margin: 5 }]}>\r\n          <Text>{props.concept}</Text>\r\n        </View>\r\n        <View style={[styles.detailValue, { width: 50, margin: 5 }]}>\r\n          <Text>{props.sessions}</Text>\r\n        </View>\r\n        <View style={[styles.detailValue, { width: 50, margin: 5 }]}>\r\n          <Text>{props.iva}</Text>\r\n        </View>\r\n        <View style={[styles.detailValue, { width: 50, margin: 5 }]}>\r\n          <Text>{props.base}</Text>\r\n        </View>\r\n        <View style={[styles.detailValue, { width: 50, margin: 5 }]}>\r\n          <Text>{props.total}</Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n);\r\n\r\nexport default InvoiceDetails;","import React from 'react';\r\n\r\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  footerText: {\r\n    fontSize: 8,\r\n  },\r\n  footer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'stretch',\r\n    marginTop: 100,\r\n  },\r\n});\r\n\r\nconst Footer = () => (\r\n    <View style={styles.footer}>\r\n      <Text style={styles.footerText}>\r\n        De conformidad con la Ley Orgánica 15/1999 de Protección de Datos, CENTRO OTOMO le informa de que sus\r\n        datos personales están incluidos en un fichero denominado FICHERO DE DATOS DE PACIENTES inscrito en la\r\n        Agencia Española de Protección de Datos y cuya finalidad es la GESTIÓN DE PACIENTES, pudiendo ejercitar\r\n        sus derechos de OPOSICIÓN, ACCESO, RECTIFICACIÓN Y/O CANCELACIÓN mediante escrito a: CENTRO OTOMO, calle\r\n        Castelao 13-15, bajo, 27001 Lugo,indicando por escrito su petición y adjuntando fotocopia de DNI o en su\r\n        defecto doccumento que acredite su debida identidad.\r\n      </Text>\r\n    </View>\r\n);\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { PDFViewer, Document, Page, StyleSheet } from '@react-pdf/renderer';\r\nimport Header from '../pdf/components/Header';\r\nimport InvoiceID from '../pdf/components/InvoiceID';\r\nimport PersonalData from '../pdf/components/PersonalData';\r\nimport InvoiceDetails from '../pdf/components/InvoiceDetails';\r\nimport Footer from '../pdf/components/Footer';\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      invoiceData: {},\r\n      id: 0,\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { invoice } = this.props.location.state;\r\n    const date = new Date(invoice.createdAt);\r\n\r\n    let day = date.getDate()\r\n    let month = date.getMonth() + 1\r\n    let year = date.getFullYear()\r\n\r\n    const invoiceNumber = `${invoice.inumber}/${year}`;\r\n    const invoiceDate = `${day}-${month}-${year}`;\r\n\r\n    const styles = StyleSheet.create({\r\n      page: {\r\n        padding: 30,\r\n      },\r\n    });\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <PDFViewer key={Math.random()} style={{ width: 800, height: 1300 }}>\r\n          <Document\r\n            author=\"Centro Otomo\"\r\n            keywords=\"acupuntura, psicología\"\r\n            subject=\"Factura\"\r\n            title=\"Factura\"\r\n          >\r\n            <Page size=\"A4\" style={styles.page}>\r\n              <Header />\r\n              <InvoiceID number={invoiceNumber} date={invoiceDate} />\r\n              <PersonalData name={invoice.name} surname={invoice.surname} address={invoice.address} dni={invoice.dni}/>\r\n              <InvoiceDetails\r\n                concept={invoice.concept}\r\n                sessions={invoice.sessions}\r\n                iva={invoice.iva}\r\n                base={invoice.base}\r\n                total={invoice.total}\r\n              />\r\n              <Footer />\r\n            </Page>\r\n          </Document>\r\n        </PDFViewer>\r\n      </div>\r\n    )\r\n\r\n\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class ObservationsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveObservations = this.retrieveObservations.bind(this);\r\n    this.deleteObservation = this.deleteObservation.bind(this);\r\n    this.sortObs = this.sortObs.bind(this);\r\n    this.sortObsInv = this.sortObsInv.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      observations: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveObservations();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n  }\r\n  retrieveObservations() {\r\n    const { id } = this.state;\r\n\r\n    // console.log(\"ID del param es: \" + id);\r\n\r\n    PatientDataService.findObservations(id)\r\n      .then((response) => {\r\n        // console.log(response);\r\n\r\n        let sortedArray = response.data.sort(function(a,b){\r\n          // Turn your strings into dates, and then subtract them\r\n          // to get a value that is either negative, positive, or zero.\r\n          return new Date(b.createdAt) - new Date(a.createdAt);\r\n        });\r\n\r\n        this.setState({\r\n          observations: sortedArray,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n// array.sort(function(a,b){\r\n//   // Turn your strings into dates, and then subtract them\r\n//   // to get a value that is either negative, positive, or zero.\r\n//   return new Date(b.date) - new Date(a.date);\r\n// });\r\n  deleteObservation(e) {\r\n\r\n  \tconst observationID = e.target.getAttribute('aid');\r\n  \t// const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    PatientDataService.deleteObservation(this.state.id, observationID)\r\n      .then((response) => {\r\n\r\n        const newObservations = this.state.observations;\r\n\r\n        const newArray = newObservations.filter(o => o.id !== response.data.observation);\r\n\r\n        console.log(newArray);\r\n\r\n        this.setState({\r\n          observations: newArray\r\n        });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  sortObs() {\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations);\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations.sort(function(a,b){\r\n    //   // Turn your strings into dates, and then subtract them\r\n    //   // to get a value that is either negative, positive, or zero.\r\n    //   return new Date(b.createdAt) - new Date(a.createdAt);\r\n    // }));\r\n\r\n    let sortedArray = this.state.observations.sort(function(a,b){\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      return new Date(b.createdAt) - new Date(a.createdAt);\r\n    });\r\n\r\n    this.setState({\r\n      observations: sortedArray\r\n    });\r\n\r\n\r\n  }\r\n\r\n  sortObsInv() {\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations);\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations.sort(function(a,b){\r\n    //   // Turn your strings into dates, and then subtract them\r\n    //   // to get a value that is either negative, positive, or zero.\r\n    //   return new Date(b.createdAt) - new Date(a.createdAt);\r\n    // }));\r\n\r\n\r\n    let sortedArray = this.state.observations.sort(function(a,b){\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      return new Date(a.createdAt) - new Date(b.createdAt);\r\n    });\r\n\r\n    this.setState({\r\n      observations: sortedArray\r\n    });\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      id,\r\n      observations\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\" style={{ marginTop: '10px' }}>\r\n        <div className=\"col-6\" style={{ marginBottom: '10px'/*width: '18rem'*/ }}>\r\n          <Button href={`/patients/${id}/obs/new`} variant=\"secondary\">Nueva</Button>\r\n        </div>\r\n        <div className=\"col-6\" style={{ marginBottom: '10px',display: 'flex',justifyContent: 'flex-end'/*width: '18rem'*/ }}>\r\n          <div>\r\n            {[DropdownButton].map((DropdownType, idx) => (\r\n              <DropdownType\r\n                as={ButtonGroup}\r\n                key={idx}\r\n                id={`dropdown-button-drop-${idx}`}\r\n                variant=\"secondary\"\r\n                title=\"Ordernar\"\r\n              >\r\n                <Dropdown.Item eventKey=\"1\" onClick={this.sortObs}>Recientes</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"2\" onClick={this.sortObsInv}>Antiguos</Dropdown.Item>\r\n              </DropdownType>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          { observations && observations.map((observation, index) => {\r\n\r\n            return <Card style={{ marginBottom: '10px'/*width: '18rem'*/ }} key={index}>\r\n              <Card.Body>\r\n                <Card.Title>{moment(observation.createdAt).format(\"DD/MM/YYYY - hh:mm:ss\")}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\r\n                <Card.Text>\r\n                \t{observation.note}<br/>\r\n                </Card.Text>\r\n                <Card.Link href=\"#\" aid={observation.id} arrindx={index} onClick={this.deleteObservation}>Borrar</Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            }\r\n          )}\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class AddPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeNote = this.onChangeNote.bind(this);\r\n    this.addObservation = this.addObservation.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      note: \"\",\r\n      success: false\r\n    };\r\n  }\r\n\r\n  onChangeNote(e) {\r\n    this.setState({\r\n      note: e.target.value,\r\n    });\r\n  }\r\n\r\n  addObservation() {\r\n    var data = {\r\n      note: this.state.note\r\n    };\r\n\r\n    PatientDataService.addObservation(this.state.id, data)\r\n      .then((response) => {\r\n        this.setState({\r\n          success: true\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return this.state.success ? <Redirect to={`/patients/${this.state.id}/obs`} /> : (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Añadido correctamente!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPatient}>\r\n              Nuevo\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"note\">Note</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"note\"\r\n                required\r\n                value={this.state.note}\r\n                onChange={this.onChangeNote}\r\n                name=\"note\"\r\n                rows=\"10\"\r\n              >\r\n              </textarea>\r\n            </div>\r\n\r\n            <button style={{marginBottom: \"25px\"}} onClick={this.addObservation} className=\"btn btn-secondary\">\r\n              Guardar\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ServiceDataService from \"../services/service.service\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class ServicesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveServices = this.retrieveServices.bind(this);\r\n\r\n    this.state = {\r\n      services: [],\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveServices();\r\n  }\r\n\r\n  retrieveServices() {\r\n\r\n    ServiceDataService.getAll({})\r\n      .then((response) => {\r\n        const { data } = response.data;\r\n\r\n        // console.log(data);\r\n        // console.log(response.data.data);\r\n\r\n        this.setState({\r\n          services: data\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      services,\r\n    } = this.state;\r\n\r\n    return (\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12\" style={{ marginTop: '10px'}}>\r\n\r\n              { services && services.map((service, index) => {\r\n\r\n                return <div className=\"row\"  key={index} style={{ marginTop: '10px' }}>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                  <p>Servicio: {service.name}</p>\r\n                                  <p>IVA: {service.iva}</p>\r\n                                  <p>Coste: {service.cost}</p>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                  <Button variant=\"secondary\" href={\"/services/\" + service.id}>Modificar</Button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                       </div>\r\n                }\r\n\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ServiceDataService from \"../services/service.service\";\r\n\r\nexport default class AddService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeIVA = this.onChangeIVA.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.createService = this.createService.bind(this);\r\n    this.newService = this.newService.bind(this);\r\n    this.onChangeCost = this.onChangeCost.bind(this);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      iva: 0,\r\n      cost: 0,\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeIVA(e) {\r\n    this.setState({\r\n      iva: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeCost(e) {\r\n    this.setState({\r\n      cost: e.target.value,\r\n    });\r\n  }\r\n\r\n  createService() {\r\n    var data = {\r\n      iva: this.state.iva,\r\n      name: this.state.name,\r\n      cost: this.state.cost\r\n    };\r\n\r\n    ServiceDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newService() {\r\n    this.setState({\r\n      name: \"\",\r\n      iva: 0,\r\n      cost: 0,\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-12\" style={{ marginTop: '10px'}}>\r\n          <div className=\"submit-form\">\r\n            {this.state.submitted ? (\r\n              <div>\r\n                <h4>Servicio añadido correctamente!</h4>\r\n                <button className=\"btn btn-success\" onClick={this.newService}>\r\n                  Nuevo\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Service</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"name\"\r\n                    required\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    name=\"name\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"iva\">IVA</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"iva\"\r\n                    required\r\n                    value={this.state.iva}\r\n                    onChange={this.onChangeIVA}\r\n                    name=\"iva\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cost\">Coste</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"cost\"\r\n                    required\r\n                    value={this.state.cost}\r\n                    onChange={this.onChangeCost}\r\n                    name=\"cost\"\r\n                  />\r\n                </div>\r\n\r\n\r\n                <button style={{marginBottom: \"25px\"}} onClick={this.createService} className=\"btn btn-secondary\">\r\n                  Añadir\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ServiceDataService from \"../services/service.service\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class AddService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeIVA = this.onChangeIVA.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeCost = this.onChangeCost.bind(this);\r\n    this.updateService = this.updateService.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      iva: 0,\r\n      cost: 0,\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getService(this.props.match.params.id);\r\n  }\r\n\r\n  getService(id) {\r\n    ServiceDataService.get(id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          iva: response.data.iva,\r\n          cost: response.data.cost\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  onChangeIVA(e) {\r\n    this.setState({\r\n      iva: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeCost(e) {\r\n    this.setState({\r\n      cost: e.target.value,\r\n    });\r\n  }\r\n\r\n  updateService() {\r\n    var data = {\r\n      iva: this.state.iva,\r\n      name: this.state.name,\r\n      cost: this.state.cost\r\n    };\r\n\r\n    ServiceDataService.update(this.state.id,data)\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\" style={{ marginTop: '10px'}}>\r\n        <div className=\"col-12\">\r\n          <div className=\"submit-form\">\r\n            {this.state.submitted ? <Redirect to={`/services`} /> : (\r\n              <div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Servicio</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"name\"\r\n                    required\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    name=\"name\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"iva\">IVA</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"iva\"\r\n                    required\r\n                    value={this.state.iva}\r\n                    onChange={this.onChangeIVA}\r\n                    name=\"iva\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cost\">Coste</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"cost\"\r\n                    required\r\n                    value={this.state.cost}\r\n                    onChange={this.onChangeCost}\r\n                    name=\"cost\"\r\n                  />\r\n                </div>\r\n\r\n                <button style={{marginBottom: \"25px\"}} onClick={this.updateService} className=\"btn btn-secondary\">\r\n                  Actualizar\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddPatient from \"./components/add-patient.component\";\nimport Patient from \"./components/patient.component\";\nimport PatientsList from \"./components/patients-list.component\";\nimport AppointmentsList from \"./components/appointments-list.component\";\nimport AddAppointment from \"./components/add-appointment.component\";\n// import Appointment from \"./components/appointment.component\";\nimport AppointmentsListByPatient from \"./components/appointments-list-by-patient.component\";\n\nimport InvoicesList from \"./components/invoices-list.component\";\nimport AddInvoice from \"./components/add-invoice.component\";\nimport InvoicesListByPatient from \"./components/invoices-list-by-patient.component\";\nimport InvoicePDF from \"./components/invoice-pdf.component\";\n// import InvoicePDF from \"./components/invoice-pdf-functional.component\";\nimport ObservationsList from \"./components/observations-list-by-patient.component\";\nimport AddObservation from \"./components/add-observation.component\";\n\nimport ServicesList from \"./components/services-list.component\";\nimport AddService from \"./components/add-service.component\";\nimport Service from \"./components/service.component\";\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nclass App extends Component {\n  render() {\n    return <>\n          <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n            <Navbar.Brand href=\"/patients\">Otomo</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/appointments\">Citas</Nav.Link>\n                <NavDropdown alignRight title=\"Pacientes\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item href=\"/patients\">Buscar</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"/add\">Nuevo</NavDropdown.Item>\n                </NavDropdown>\n                <NavDropdown alignRight title=\"Facturas\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item href=\"/invoices\">Facturas</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"/services\">Servicios</NavDropdown.Item>\n                  <NavDropdown.Item href=\"/addservice\">Nuevo Servicio</NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <div className=\"container\">\n            <Router>\n              <Switch>\n                <Route\n                  exact\n                  path={[\"/\", \"/appointments\"]}\n                  component={AppointmentsList}\n                />\n                <Route\n                  exact\n                  path={[\"/\", \"/appointments/after/:selected\"]}\n                  component={AppointmentsList}\n                />\n                <Route exact path=\"/addappointment/:id\" component={AddAppointment} />\n                {/*<Route path=\"/appointments/:id\" component={Appointment} />*/}\n                <Route path=\"/appointments/patient/:id\" component={AppointmentsListByPatient} />\n                <Route\n                  exact\n                  path={[\"/\", \"/patients\"]}\n                  component={PatientsList}\n                />\n                <Route\n                  exact\n                  path={[\"/\", \"/patients/appoint/:id\"]}\n                  component={PatientsList}\n                />\n                <Route exact path=\"/add\" component={AddPatient} />\n                <Route exact path=\"/patients/:id\" component={Patient} />\n                <Route exact path=\"/patients/:id/obs\" component={ObservationsList} />\n                <Route path=\"/patients/:id/obs/new\" component={AddObservation} />\n                <Route\n                  exact\n                  path={[\"/\", \"/invoices\"]}\n                  component={InvoicesList}\n                />\n                <Route exact path=\"/addinvoice/:id\" component={AddInvoice} />\n                <Route path=\"/invoices/patient/:id\" component={InvoicesListByPatient} />\n                <Route path=\"/invoices/pdf/:id\" component={InvoicePDF} />\n\n                <Route\n                  exact\n                  path={[\"/\", \"/services\"]}\n                  component={ServicesList}\n                />\n                <Route exact path=\"/addservice\" component={AddService} />\n                <Route exact path=\"/services/:id\" component={Service} />\n                {/*\n                */}\n              </Switch>\n            </Router>\n          </div>\n        </>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import the library\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\n// import your icons\r\n// import { coffee } from '@fortawesome/free-regular-svg-icons';\r\n// import { faCoffee } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCoffee, faCalendarTimes, faFileExcel } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n  faCoffee,\r\n  faCalendarTimes,\r\n  faFileExcel\r\n);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import your fontawesome library\nimport './fontawesome';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}